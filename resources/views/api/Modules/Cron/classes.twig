{% import 'PlentyPluginShowcase::macros.fileTabs' as tabs %}
{# Autogenerated - 2016-09-13 10:11:54 #}
{% extends 'PlentyPluginShowcase::api.includes' %}


{% block Content %}


<!-- Autogenerated 2016-09-13 10:11:54 -->



<div id="plentyhackapidokumentation">
                            <h1 id="cron">Cron</h1>

                                        <h2 id="contracts_cron">Contracts</h2>
        <h3 id="cronhandler_contracts_cron">CronHandler</h3>
    <p>Cron handler interface that should be used as wrapper for new cron events. The event class should implement an handle() method.</p>
    <div class="name-container">
        <h4>Namespace</h4>
        <p>Plenty\Modules\Cron\Contracts</p>
    </div>
        
        
    
    {% if exampleFiles is defined %}

        {% if exampleFiles.Cron.CronHandler  is not empty %}
        <div class="example-container">
        <h4>Example</h4>
        {{ tabs.output('exampletabs-Cron-CronHandler',  exampleFiles.Cron.CronHandler ) }}
        </div>
        {% endif %}

    {% endif %}
    

                                <h2 id="services_cron">Services</h2>
        <h3 id="croncontainer_services_cron">CronContainer</h3>
    <p>Container service that allows adding of cron event handlers based on a given schedule time.</p>
    <div class="name-container">
        <h4>Namespace</h4>
        <p>Plenty\Modules\Cron\Services</p>
    </div>
        
                <div class="meth-container">
            <h4>Methods</h4>
            <div>                <div class="well well-sm">
                        <samp>
    
                                    <strong>add</strong>(
    <abbr title="int">int</abbr> $schedule, 
    <abbr title="string">string</abbr> $handlerClass)
                        </samp>
                    </div>
                    <p>Use this method to add a handler class and a schedule time for your desired cron event. The action will then be triggered according to the given schedule.</p>
                                                                <h5><strong>Parameters</strong></h5>
                        <table class="table table-condensed">
                                                    <tr>
                                <td>
    <abbr title="int">int</abbr></td>
                                <td>$schedule</td>
                                <td>The number of minutes for which the cron action should be scheduled. Currently allowed are: 15, 20, 60 and 3600. You can also use constants like <code>CronContainer::EVERY_FIFTEEN_MINUTES</code>, <code>CronContainer::EVERY_TWENTY_MINUTES</code>, <code>CronContainer::HOURLY</code>, <code>CronContainer::DAILY</code>;</td>
                            </tr>
                                                    <tr>
                                <td>
    <abbr title="string">string</abbr></td>
                                <td>$handlerClass</td>
                                <td>The handler class that should be triggered when the cron event is launched. This class has to extend the CronHandler interface and implement the <code>handle()</code> method.</td>
                            </tr>
                                                </table>
                                                </div>
        </div>
    
    
    {% if exampleFiles is defined %}

        {% if exampleFiles.Cron.CronContainer  is not empty %}
        <div class="example-container">
        <h4>Example</h4>
        {{ tabs.output('exampletabs-Cron-CronContainer',  exampleFiles.Cron.CronContainer ) }}
        </div>
        {% endif %}

    {% endif %}
    

</div>

{% endblock %}



